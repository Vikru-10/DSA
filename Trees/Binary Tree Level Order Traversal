Question Link - https://leetcode.com/problems/binary-tree-level-order-traversal/

    #Implementation - Time O(n), Space O(n) #Accepted
    Trick(Using queue in order to implement level order because we want first in first out property)

    def levelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        queue, ans = deque(), []
        queue.append(root)
        while queue:
            length, sublist = len(queue), []
            while length>0:
                node = queue.popleft()
                if node:
                    sublist.append(node.val)
                    queue.append(node.left)
                    queue.append(node.right)
                length -= 1
            if sublist:
                ans.append(sublist)
        return ans
