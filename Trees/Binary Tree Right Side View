Question Link - https://leetcode.com/problems/binary-tree-right-side-view/

    Solution #1 - Time O(n), Space O(n) #Accepted
    Trick(Using level order)

    def rightSideView(self, root: Optional[TreeNode]) -> List[int]:
        queue, view = deque(), []
        queue.append(root)
        while queue:
            level = len(queue)
            while level>0:
                node = queue.popleft()
                if node:
                    if level==1:
                        view.append(node.val)
                    if node.left:
                        queue.append(node.left)
                    if node.right:
                        queue.append(node.right)
                level -= 1
        return view
