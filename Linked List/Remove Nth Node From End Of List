 Question Link - https://leetcode.com/problems/remove-nth-node-from-end-of-list/

         Solution #1 - Time O(n), Space O(1) #Accepted
         Trick(Finding length first and then reaching to the rmoval point with two pointers and then considering cases of removal to remove the node)

         """length, temp = 0, head
        while temp:
            temp = temp.next
            length += 1
        prev, curr = None, head
        for i in range(0,length-n):
            prev = curr
            curr = curr.next
        if curr==head:
            head = head.next
        else:
            prev.next = curr.next
            curr.next = None
        return head"""
        
        Solution #2 - Time O(n), Space O(1) #Accepted
        Trick(Reversing and removing)
        
        """"head = self.reverse(head)
        prev, curr = None, head
        for i in range(1,n):
            prev = curr
            curr = curr.next
        if curr==head:
            head = head.next
        else:
            prev.next = curr.next
            curr.next = None
        head = self.reverse(head)
        return head"""
