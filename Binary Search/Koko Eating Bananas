Question Link - 

        Brute Force - Time O(max(piles)*len(piles)), Space O(1) #TLE
        Trick(Simply counting if koko can eat bananas from speed 1 to max(piles))

        """"ans, k = max(piles), max(piles)
        for i in range(1,k+1):
            hour = 0
            for pile in piles:
                hour += math.ceil(pile/i)
            if(hour<=h):
                return i"""
            
        Most Optimal - Time O(log(max(p))*p), Space O(1) #Accepted
        Trick(Searching for minimum hours while in the range of 1 to max(p) and then applying the binary search on this range and then checking if koko can eat in mid hours)
        
        """"l, r, ans = 1, max(piles), max(piles)
        while(l<=r):
            mid = l + (r-l)//2
            hour = 0
            for pile in piles:
                hour += math.ceil(pile/mid)
            if(hour<=h):
                ans = mid
                r = mid - 1
            else:
                l = mid + 1
        return ans"""
