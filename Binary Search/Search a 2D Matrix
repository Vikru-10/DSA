Question Link - 

        Brute Force - Time O(m*n), Space O(1) #Accepted
        Trick(Nothing clever)

        m, n = len(matrix), len(matrix[0])
        for i in range(m):
            for j in range(n):
                if(matrix[i][j]==target):
                    return True
        return False
        
        Most Optimal - Time O(log(m*n)), Space O(1) #Accepted, #Revisit 
        Trick(Pure binary search implementation nothing else, just thing about how you can represent x,y coordinates by mid with rows or columns)
        
        """"m, n = len(matrix), len(matrix[0])
        l, r = 0, n*m - 1
        
        while(l<=r):
            mid = l + (r-l)//2
            x, y = mid//n, mid%n
            if(matrix[x][y]==target):
                return True
            elif(matrix[x][y]<target):
                l = mid + 1
            else:
                r = mid - 1
        
        return False"""
